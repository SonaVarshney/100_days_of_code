You are given a 0-indexed integer array nums of length n.

The average difference of the index i is the absolute difference between the average of the first i + 1 elements of nums and the average of the last n - i - 1 elements. Both averages should be rounded down to the nearest integer.

Return the index with the minimum average difference. If there are multiple such indices, return the smallest one.

Note:

The absolute difference of two numbers is the absolute value of their difference.
The average of n elements is the sum of the n elements divided (integer division) by n.
The average of 0 elements is considered to be 0.


Example-
Input: nums = [2,5,3,9,5,3]
Output: 3
Explanation:
- The average difference of index 0 is: |2 / 1 - (5 + 3 + 9 + 5 + 3) / 5| = |2 / 1 - 25 / 5| = |2 - 5| = 3.
- The average difference of index 1 is: |(2 + 5) / 2 - (3 + 9 + 5 + 3) / 4| = |7 / 2 - 20 / 4| = |3 - 5| = 2.
- The average difference of index 2 is: |(2 + 5 + 3) / 3 - (9 + 5 + 3) / 3| = |10 / 3 - 17 / 3| = |3 - 5| = 2.
- The average difference of index 3 is: |(2 + 5 + 3 + 9) / 4 - (5 + 3) / 2| = |19 / 4 - 8 / 2| = |4 - 4| = 0.
- The average difference of index 4 is: |(2 + 5 + 3 + 9 + 5) / 5 - 3 / 1| = |24 / 5 - 3 / 1| = |4 - 3| = 1.
- The average difference of index 5 is: |(2 + 5 + 3 + 9 + 5 + 3) / 6 - 0| = |27 / 6 - 0| = |4 - 0| = 4.
The average difference of index 3 is the minimum average difference so return 3.


ALGO
1) total sum find
2) ek for loop chalao jo ek ek karke elements sum kar rahi and avg1 find kar rahi
3) then avg2 will be totalsum- currsum /(n-i-1)
aur ek if condition use

 int minimumAverageDifference(vector<int>& nums) {
      
       long totalsum = 0, currentsum = 0;
        int n = nums.size();
        
        // calc totalsum
        for(auto i : nums)
            totalsum += i;
        
        int mini = INT_MAX;
        int indexans = 0;
        
        // calc the avg1 till ith index and avg2 till n-1-ith index
        // now take absolute diff btw avg1 and avg2 and keep tracking the index giving minimum diff
        // return the index giving minimum diff
        for(int i=0; i<n; i++)
        {
            currentsum += nums[i];
            int avg1 = currentsum/(i+1);
                        // kyuki avg2 for last index 0 hoga, 
            if(i==n-1)
            {
                if(avg1<mini)
                    return n-1;
                else
                    break;
            } 
            
                        // ab isme division by zero nahi hoga due to above if condition
            int avg2 = (totalsum - currentsum)/(n-i-1);
            
            if(abs(avg1-avg2)<mini)
            {
                mini = abs(avg1-avg2);
                indexans = i;
            }
        }
        
        return indexans;
    }
