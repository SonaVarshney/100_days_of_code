Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.



For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

Two binary trees are considered leaf-similar if their leaf value sequence is the same.

Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.


 void leafTree1(TreeNode* root,vector<int> &leaf1){
       
       if(root==NULL){
           return;
       }
       if(root->left==NULL && root->right==NULL){
         leaf1.push_back(root->val);
       }

       leafTree1(root->left,leaf1);
       leafTree1(root->right,leaf1);
   }

      void leafTree2(TreeNode* root,vector<int> &leaf2){
       
       if(root==NULL){
           return;
       }
       if(root->left==NULL && root->right==NULL){
         leaf2.push_back(root->val);
       }

       leafTree2(root->left,leaf2);
       leafTree2(root->right,leaf2);
   }

    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> leaf1,leaf2;
        leafTree1(root1,leaf1);
        leafTree2(root2,leaf2);

        return (leaf1==leaf2);

    }
